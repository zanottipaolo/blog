---
import { type CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { BLOG } from "@consts";

const data = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

type Acc = {
  [year: string]: CollectionEntry<"blog">[];
};

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));

const categories: string[] = [];

data.forEach((item) => {
  categories.push(...item.data.category.split(","));
});

const uniqueCategories = categories.filter(
  (item, index) => categories.indexOf(item) === index,
);

const checkedCategories: string[] = [];
---

<Layout title={BLOG.TITLE} description={BLOG.DESCRIPTION}>
  <Container>
    <aside data-pagefind-ignore>
      <div class="space-y-10">
        <details
          class="overflow-hidden rounded border border-gray-300 [&_summary::-webkit-details-marker]:hidden"
        >
          <summary
            class="flex cursor-pointer items-center justify-between gap-2 bg-white p-4 text-gray-900 transition"
          >
            <span class="text-sm font-medium">Filter by category</span>

            <span class="transition group-open:-rotate-180">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="size-4"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
              </svg>
            </span>
          </summary>

          <div class="border-t border-gray-200 bg-white">
            <ul class="space-y-1 border-t border-gray-200 p-4">
              {
                uniqueCategories.map((category) => (
                  <li>
                    <label
                      for={category}
                      class="inline-flex items-center gap-2"
                    >
                      <input
                        type="checkbox"
                        id={category}
                        class="size-5 rounded border-gray-300"
                      />

                      <span class="text-sm font-medium text-gray-700">
                        {category}
                      </span>
                    </label>
                  </li>
                ))
              }
            </ul>
          </div>
        </details>

        <div class="space-y-4">
          {
            years.map((year) => (
              <section class="animate space-y-4">
                <div class="font-semibold text-black dark:text-white">
                  {year}
                </div>
                <div>
                  <ul class="not-prose flex flex-col gap-4">
                    {posts[year]
                      .filter((post) =>
                        checkedCategories.some((item) =>
                          post.data.category.includes(item),
                        ),
                      )
                      .map((post) => (
                        <li>
                          <ArrowCard entry={post} />
                        </li>
                      ))}
                  </ul>
                </div>
              </section>
            ))
          }
        </div>
      </div>
    </aside>
  </Container>
</Layout>
